name: Go Unit Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  GO_VERSION: '1.24'
  JWT_SECRET: ${{ secrets.JWT_SECRET }}

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install dependencies
      run: |
        go mod tidy
        go install github.com/jstemmer/go-junit-report/v2@latest

    - name: Run unit tests with coverage
      run: |
        mkdir -p test-results
        go test -v -coverprofile=coverage.out -covermode=atomic ./... 2>&1 | tee test-output.txt
        cat test-output.txt | go-junit-report > test-results/junit.xml
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          test-results/*
          coverage.out

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      if: success()
      with:
        file: coverage.out
        flags: unittests
